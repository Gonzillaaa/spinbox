[0;34m[INFO][0m Test environment setup for: Unified Test Runner
[0;34m[INFO][0m Project root: /Users/gonzalo/code/spinbox
[0;34m[INFO][0m Test directory: /tmp/spinbox-test-16371
[1;33m=================================================[0m
[1;33m          Spinbox Unified Test Runner           [0m
[1;33m=================================================[0m

[0;34m===============================================[0m
[0;34m             Running Unit Tests               [0m
[0;34m===============================================[0m
[1;33m===============================================[0m
[1;33m        Spinbox Core Functionality Tests        [0m
[1;33m===============================================[0m

[0;34mSetting up test environment...[0m
[0;32mTest environment ready[0m

[1;33m=== Configuration Loading Tests ===[0m
[0;34mTesting: Config file created[0m
[0;32m✓ PASS: Config file created[0m
[0;34mTesting: Config variable loaded correctly[0m
[0;32m✓ PASS: Config variable loaded correctly[0m
[0;34mTesting: Missing config file detection[0m
[0;32m✓ PASS: Missing config file detection[0m

[1;33m=== Version Substitution Tests ===[0m
[0;34mTesting: Python version substitution[0m
[0;32m✓ PASS: Python version substitution[0m
[0;34mTesting: Node version substitution[0m
[0;32m✓ PASS: Node version substitution[0m
[0;34mTesting: Requirements version constraint[0m
[0;32m✓ PASS: Requirements version constraint[0m

[1;33m=== File Generation Tests ===[0m
[0;34mTesting: File generation works[0m
[0;32m✓ PASS: File generation works[0m
[0;34mTesting: Generated file has correct content[0m
[0;32m✓ PASS: Generated file has correct content[0m
[0;34mTesting: Nested directory creation[0m
[0;32m✓ PASS: Nested directory creation[0m

[1;33m=== Error Handling Tests ===[0m
[0;34mTesting: Undefined variable default fallback[0m
[0;32m✓ PASS: Undefined variable default fallback[0m
[0;34mTesting: Empty variable fallback[0m
[0;32m✓ PASS: Empty variable fallback[0m
[0;34mTesting: Nonexistent file detection[0m
[0;32m✓ PASS: Nonexistent file detection[0m

[1;33m=== Configuration Integration Test ===[0m
[0;34mTesting: Test config file created[0m
[0;32m✓ PASS: Test config file created[0m
[0;34mTesting: Python version from config[0m
[0;32m✓ PASS: Python version from config[0m
[0;34mTesting: Node version from config[0m
[0;32m✓ PASS: Node version from config[0m
[0;34mTesting: PostgreSQL version from config[0m
[0;32m✓ PASS: PostgreSQL version from config[0m
[0;34mTesting: Redis version from config[0m
[0;32m✓ PASS: Redis version from config[0m

[1;33m=== Project Setup Configuration Test ===[0m
[0;34mTesting: Project setup: Python version from config[0m
[0;32m✓ PASS: Project setup: Python version from config[0m
[0;34mTesting: Project setup: Node version from config[0m
[0;32m✓ PASS: Project setup: Node version from config[0m
[0;34mTesting: Project setup: PostgreSQL version from config[0m
[0;32m✓ PASS: Project setup: PostgreSQL version from config[0m
[0;34mTesting: Project setup: Redis version from config[0m
[0;32m✓ PASS: Project setup: Redis version from config[0m
[0;34mTesting: Project setup: Dockerfile uses config version[0m
[0;32m✓ PASS: Project setup: Dockerfile uses config version[0m

[1;33m=== CLI Command Tests ===[0m
[0;34mTesting: CLI executable exists[0m
[0;32m✓ PASS: CLI executable exists[0m
[0;34mTesting: CLI is executable[0m
[0;32m✓ PASS: CLI is executable[0m
[0;34mTesting: Main help command works[0m
[0;32m✓ PASS: Main help command works[0m
[0;34mTesting: Version command works[0m
[0;32m✓ PASS: Version command works[0m
[0;34mTesting: Create help command works[0m
[0;32m✓ PASS: Create help command works[0m
[0;34mTesting: Config help command works[0m
[0;32m✓ PASS: Config help command works[0m
[0;34mTesting: Profiles help command works[0m
[0;32m✓ PASS: Profiles help command works[0m
[0;34mTesting: Profiles command works[0m
[0;32m✓ PASS: Profiles command works[0m
[0;34mTesting: Config list command works[0m
[0;32m✓ PASS: Config list command works[0m
[0;34mTesting: Update help command works[0m
[0;32m✓ PASS: Update help command works[0m
[0;34mTesting: Uninstall help command works[0m
[0;32m✓ PASS: Uninstall help command works[0m
[0;34mTesting: Uninstall dry-run command works[0m
[0;32m✓ PASS: Uninstall dry-run command works[0m

[1;33m=== Profile Validation Tests ===[0m
[0;34mTesting: Profiles directory exists[0m
[0;32m✓ PASS: Profiles directory exists[0m
[0;34mTesting: Profile web-app exists[0m
[0;32m✓ PASS: Profile web-app exists[0m
[0;34mTesting: Profile web-app has [profile] section[0m
[0;32m✓ PASS: Profile web-app has [profile] section[0m
[0;34mTesting: Profile web-app has [components] section[0m
[0;32m✓ PASS: Profile web-app has [components] section[0m
[0;34mTesting: Profile web-app can be displayed via CLI[0m
[0;32m✓ PASS: Profile web-app can be displayed via CLI[0m
[0;34mTesting: Profile api-only exists[0m
[0;32m✓ PASS: Profile api-only exists[0m
[0;34mTesting: Profile api-only has [profile] section[0m
[0;32m✓ PASS: Profile api-only has [profile] section[0m
[0;34mTesting: Profile api-only has [components] section[0m
[0;32m✓ PASS: Profile api-only has [components] section[0m
[0;34mTesting: Profile api-only can be displayed via CLI[0m
[0;32m✓ PASS: Profile api-only can be displayed via CLI[0m
[0;34mTesting: Profile data-science exists[0m
[0;32m✓ PASS: Profile data-science exists[0m
[0;34mTesting: Profile data-science has [profile] section[0m
[0;32m✓ PASS: Profile data-science has [profile] section[0m
[0;34mTesting: Profile data-science has [components] section[0m
[0;32m✓ PASS: Profile data-science has [components] section[0m
[0;34mTesting: Profile data-science can be displayed via CLI[0m
[0;32m✓ PASS: Profile data-science can be displayed via CLI[0m
[0;34mTesting: Profile ai-llm exists[0m
[0;32m✓ PASS: Profile ai-llm exists[0m
[0;34mTesting: Profile ai-llm has [profile] section[0m
[0;32m✓ PASS: Profile ai-llm has [profile] section[0m
[0;34mTesting: Profile ai-llm has [components] section[0m
[0;32m✓ PASS: Profile ai-llm has [components] section[0m
[0;34mTesting: Profile ai-llm can be displayed via CLI[0m
[0;32m✓ PASS: Profile ai-llm can be displayed via CLI[0m
[0;34mTesting: Profile python exists[0m
[0;32m✓ PASS: Profile python exists[0m
[0;34mTesting: Profile python has [profile] section[0m
[0;32m✓ PASS: Profile python has [profile] section[0m
[0;34mTesting: Profile python has [components] section[0m
[0;32m✓ PASS: Profile python has [components] section[0m
[0;34mTesting: Profile python can be displayed via CLI[0m
[0;32m✓ PASS: Profile python can be displayed via CLI[0m
[0;34mTesting: Profile node exists[0m
[0;32m✓ PASS: Profile node exists[0m
[0;34mTesting: Profile node has [profile] section[0m
[0;32m✓ PASS: Profile node has [profile] section[0m
[0;34mTesting: Profile node has [components] section[0m
[0;32m✓ PASS: Profile node has [components] section[0m
[0;34mTesting: Profile node can be displayed via CLI[0m
[0;32m✓ PASS: Profile node can be displayed via CLI[0m

[1;33m=== Project Creation Smoke Tests ===[0m
[0;34mTesting: Dry run project creation works[0m
[0;32m✓ PASS: Dry run project creation works[0m
[0;34mTesting: Dry run with profile works[0m
[0;32m✓ PASS: Dry run with profile works[0m
[0;34mTesting: Dry run with version override works[0m
[0;32m✓ PASS: Dry run with version override works[0m
[0;32m✓ PASS: Invalid profile fails appropriately[0m
[0;34mTesting: Generators directory exists[0m
[0;32m✓ PASS: Generators directory exists[0m
[0;34mTesting: Python generator exists[0m
[0;32m✓ PASS: Python generator exists[0m
[0;34mTesting: Node generator exists[0m
[0;32m✓ PASS: Node generator exists[0m
[0;34mTesting: Uninstall script exists[0m
[0;32m✓ PASS: Uninstall script exists[0m
[0;34mTesting: Uninstall script is executable[0m
[0;32m✓ PASS: Uninstall script is executable[0m

[1;33m=== Key Files Existence Tests ===[0m
[0;34mTesting: lib/config.sh exists[0m
[0;32m✓ PASS: lib/config.sh exists[0m
[0;34mTesting: lib/utils.sh exists[0m
[0;32m✓ PASS: lib/utils.sh exists[0m
[0;34mTesting: bin/spinbox exists[0m
[0;32m✓ PASS: bin/spinbox exists[0m
[0;34mTesting: install.sh exists[0m
[0;32m✓ PASS: install.sh exists[0m

[1;33m=== Scripts Executable Tests ===[0m
[0;34mTesting: bin/spinbox is executable[0m
[0;32m✓ PASS: bin/spinbox is executable[0m
[0;34mTesting: install.sh is executable[0m
[0;32m✓ PASS: install.sh is executable[0m

[1;33m=== Configuration System Smoke Tests ===[0m
[0;34mTesting: Configuration system loads without errors[0m
[0;32m✓ PASS: Configuration system loads without errors[0m

[1;33m=== Version Defaults Tests ===[0m
[0;34mTesting: Python version default set[0m
[0;32m✓ PASS: Python version default set[0m
[0;34mTesting: Node version default set[0m
[0;32m✓ PASS: Node version default set[0m


[0;34mCleaning up test environment...[0m
[0;32mCleanup complete[0m

[1;33m===============================================[0m
[1;33m                Test Results                  [0m
[1;33m===============================================[0m
Tests run:    77
[0;32mPassed:       77[0m
[0;32mFailed:       0[0m

[0;32mAll tests passed![0m

[0;32m✨ Spinbox core functionality verified![0m
[0;32m✓ Unit tests completed successfully[0m
[0;34m===============================================[0m
[0;34m           Running Integration Tests          [0m
[0;34m===============================================[0m
[1;33m--- CLI Integration Tests ---[0m
[0;34m[INFO][0m Test environment setup for: CLI Integration Tests
[0;34m[INFO][0m Project root: /Users/gonzalo/code/spinbox
[0;34m[INFO][0m Test directory: /tmp/spinbox-test-17599
[0;34mStarting Spinbox CLI Tests[0m
Target: < 5 seconds total execution time

[1;33m=== CLI Help System Tests ===[0m
[0;32m✓[0m Main help displays correctly: Condition true
[0;32m✓[0m Create command help works: Condition true
[0;32m✓[0m Config command help works: Condition true
[0;32m✓[0m Status command help works: Condition true

[1;33m=== CLI Version Tests ===[0m
[0;32m✓[0m Version command displays version info: Condition true

[1;33m=== Configuration System Tests ===[0m
[0;32m✓[0m Config list command works: Condition true
[0;32m✓[0m Status command works: Condition true

[1;33m=== Project Creation Tests ===[0m
[0;32m✓[0m Python project creation (dry-run): Condition true
[0;32m✓[0m Full-stack project creation (dry-run): Condition true
[1;33m  SKIP: Version override through CLI flags (not yet implemented)[0m

[1;33m=== Error Handling Tests ===[0m
[0;32m✓[0m Invalid command error handling: Condition true
[0;32m✓[0m Missing project name error: Condition true
[0;32m✓[0m Invalid project name validation: Condition true

[1;33m=== Component Generator Tests ===[0m
[0;32m✓[0m Minimal Python generator exists and is executable: Condition true
[0;32m✓[0m Minimal Node generator exists and is executable: Condition true
[0;32m✓[0m FastAPI generator exists and is readable: Condition true
[0;32m✓[0m Next.js generator exists and is readable: Condition true
[0;32m✓[0m PostgreSQL generator exists and is readable: Condition true

[1;33m=== Integration Tests ===[0m
[0;32m✓[0m All library modules can be sourced: Condition true
[0;32m✓[0m Version configuration returns valid version format: Condition true

[1;33m=== Performance Tests ===[0m
[0;32m✓[0m Help command completes under 2 seconds (.056561000 seconds): Condition true
[0;32m✓[0m Dry-run project creation completes under 5 seconds (.189847000 seconds): Condition true

[0;32m✓[0m Performance target met (.195671000s < 5s)

[1;33m===============================================[0m
[1;33m           CLI Integration Tests Results              [0m
[1;33m===============================================[0m
Tests run:    21
[0;32mPassed:       21[0m
[0;32mFailed:       0[0m

[0;32mAll tests passed![0m
[0;32m✓ CLI integration tests passed[0m
[1;33m--- Workflow Scenario Tests ---[0m
================================
Spinbox Workflow Scenarios Test Suite
================================
[0;34m[INFO][0m Test environment setup for: Workflow Scenarios Tests
[0;34m[INFO][0m Project root: /Users/gonzalo/code/spinbox
[0;34m[INFO][0m Test directory: /tmp/spinbox-test-18768
[0;34m[INFO][0m Cleaning previous installations...

[1;33m=== Developer Workflow ===[0m
[0;34m[INFO][0m Developer clones repo and runs spinbox directly without installation
[0;32m✓[0m Developer Workflow: Developer clones repo and runs spinbox directly without installation

[1;33m=== New User Installation ===[0m
[0;34m[INFO][0m User installs spinbox locally and creates first project
[0;32m✓[0m New User Installation: User installs spinbox locally and creates first project

[1;33m=== System Administrator ===[0m
[0;34m[INFO][0m Admin installs spinbox system-wide for all users
[0;32m✓[0m System Administrator: Admin installs spinbox system-wide for all users

[1;33m=== Profile Migration ===[0m
[0;34m[INFO][0m User migrates from old minimal profile to new python/node profiles
[0;32m✓[0m Profile Migration: User migrates from old minimal profile to new python/node profiles

[1;33m=== Update Workflow ===[0m
[0;34m[INFO][0m User checks for updates and verifies current version
[0;32m✓[0m Update Workflow: User checks for updates and verifies current version

[1;33m=== Multiple Installation Cleanup ===[0m
[0;34m[INFO][0m User cleans up both old and new installation formats
[0;32m✓[0m Multiple Installation Cleanup: User cleans up both old and new installation formats

[1;33m=== Cross-Mode Consistency ===[0m
[0;34m[INFO][0m Verify development and installed versions produce identical output
[0;32m✓[0m Cross-Mode Consistency: Verify development and installed versions produce identical output

[1;33m=== Error Recovery ===[0m
[0;34m[INFO][0m System handles and recovers from common errors gracefully
[0;32m✓[0m Error Recovery: System handles and recovers from common errors gracefully

[1;33m===============================================[0m
[1;33m           Workflow Scenarios Tests Results              [0m
[1;33m===============================================[0m
Tests run:    8
[0;32mPassed:       8[0m
[0;32mFailed:       0[0m

[0;32mAll tests passed![0m
[Cleanup] Cleaning up test artifacts...
[0;32m✓ Workflow scenario tests passed[0m
[0;32m✓ All integration tests completed successfully[0m
[0;34m===============================================[0m
[0;34m            Running Workflow Tests             [0m
[0;34m===============================================[0m
[1;33m--- Advanced CLI Features Tests ---[0m
[0;34m[INFO][0m Test environment setup for: Advanced CLI Features Tests
[0;34m[INFO][0m Project root: /Users/gonzalo/code/spinbox
[0;34m[INFO][0m Test directory: /tmp/spinbox-test-21756
=============================================
Spinbox Advanced CLI Features Test Suite
=============================================

[0;34m[INFO][0m === Testing Version Override Flags ===
[0;32m✓[0m python_version_override: Python version override working
[0;32m✓[0m node_version_override: Node version override working
[0;32m✓[0m postgres_version_override: PostgreSQL version override working
[0;32m✓[0m redis_version_override: Redis version override working
[0;32m✓[0m multiple_version_overrides: Multiple version overrides working

[0;34m[INFO][0m === Testing Template Selection ===
[0;32m✓[0m template_minimal: Template minimal selection working
[0;32m✓[0m template_data-science: Template data-science selection working
[0;32m✓[0m template_ai-llm: Template ai-llm selection working
[0;32m✓[0m template_web-scraping: Template web-scraping selection working
[0;32m✓[0m template_api-development: Template api-development selection working
[0;32m✓[0m template_custom: Template custom selection working

[0;34m[INFO][0m === Testing Force Flag ===
[0;32m✓[0m force_flag_accepted: Force flag accepted by CLI
[0;32m✓[0m force_flag_behavior: Force flag behavior indicated in output

[0;34m[INFO][0m === Testing Configuration Operations ===
[0;32m✓[0m config_set_operation: Config set operation accepted
[0;32m✓[0m config_get_after_set: Config get shows set value
[0;32m✓[0m config_reset_operation: Config reset operation skipped (interactive command)
[0;32m✓[0m config_setup_flag: Config setup flag accepted

[0;34m[INFO][0m === Testing Update System Advanced Features ===
[0;32m✓[0m update_specific_version: Update version flag accepted (expected failure in test env)
[0;32m✓[0m update_force_flag: Update force flag accepted (expected failure in test env)
[0;32m✓[0m update_yes_flag: Update yes flag accepted (expected failure in test env)

[0;34m[INFO][0m === Testing Add Command Advanced Features ===
[0;32m✓[0m add_with_version_override: Add command accepts version overrides
[0;32m✓[0m add_multiple_components: Add command accepts multiple components

[0;34m[INFO][0m === Advanced CLI Features Analysis ===

=============================================
Advanced CLI Features Test Results
=============================================

Total Tests: 22
[0;32mPassed: 22[0m
[0;31mFailed: [0m

[0;32m✓ ALL ADVANCED CLI FEATURES WORKING![0m

Advanced CLI feature analysis complete!

[0;32m✓ Advanced CLI Features tests passed[0m
[1;33m--- CLI Reference Validation Tests ---[0m
=============================================
Spinbox CLI Reference Documentation Tests
Testing ALL functionality from docs/user/cli-reference.md
=============================================
Working in: /tmp/spinbox-test-25429

[0;34m=== 1. Basic Command Structure Tests ===[0m
[1] Testing version_command: [0;32m✅ PASS[0m
   └─ Version command shows version info
[2] Testing version_alt: [0;32m✅ PASS[0m
   └─ Alternative version syntax works
[3] Testing help_command: [0;32m✅ PASS[0m
   └─ Main help command works
[4] Testing help_alt: [0;32m✅ PASS[0m
   └─ Alternative help syntax works
[5] Testing verbose_help: [0;32m✅ PASS[0m
   └─ Verbose option doesn't break help
[6] Testing dry_run_help: [0;32m✅ PASS[0m
   └─ Dry-run option doesn't break help

[0;34m=== 2. Create Command Tests ===[0m
[7] Testing create_web_app: [0;32m✅ PASS[0m
   └─ Web-app profile creation
[8] Testing create_api_only: [0;32m✅ PASS[0m
   └─ API-only profile creation
[9] Testing create_data_science: [0;32m✅ PASS[0m
   └─ Data-science profile creation
[10] Testing create_ai_llm: [0;32m✅ PASS[0m
   └─ AI-LLM profile creation
[11] Testing create_python: [0;32m✅ PASS[0m
   └─ Python profile creation
[12] Testing create_simple_python: [0;32m✅ PASS[0m
   └─ Simple Python project creation
[13] Testing create_fastapi_redis: [0;32m✅ PASS[0m
   └─ FastAPI + Redis creation
[14] Testing create_nextjs_mongo: [0;32m✅ PASS[0m
   └─ Next.js + MongoDB creation
[15] Testing create_full_stack: [0;32m✅ PASS[0m
   └─ Full stack creation
[16] Testing create_python_version: [0;32m✅ PASS[0m
   └─ Python version override
[17] Testing create_node_version: [0;32m✅ PASS[0m
   └─ Node.js version override
[18] Testing create_multi_version: [0;32m✅ PASS[0m
   └─ Multiple version overrides
[19] Testing create_subdir: [0;32m✅ PASS[0m
   └─ Subdirectory creation
[20] Testing create_absolute: [0;32m✅ PASS[0m
   └─ Absolute path creation
[21] Testing create_template: [0;32m✅ PASS[0m
   └─ Requirements template selection
[22] Testing create_help: [0;32m✅ PASS[0m
   └─ Create command help works

[0;34m=== 3. Add Command Tests ===[0m
[23] Testing add_help: [0;32m✅ PASS[0m
   └─ Add command help works
[24] Testing add_no_project: [0;32m✅ PASS[0m
   └─ Add fails outside project directory
[25] Testing add_error_message: [0;32m✅ PASS[0m
   └─ Correct error message when not in project

[0;34m=== 4. Status Command Tests ===[0m
[26] Testing status_help: [0;32m✅ PASS[0m
   └─ Status command help works
[27] Testing status_config: [0;32m✅ PASS[0m
   └─ Status config display works
[28] Testing status_components: [0;32m✅ PASS[0m
   └─ Status components display works
[29] Testing status_all: [0;32m✅ PASS[0m
   └─ Status all display works
[30] Testing status_default: [0;32m✅ PASS[0m
   └─ Status default (all) works

[0;34m=== 5. Config Command Tests ===[0m
[31] Testing config_help: [0;32m✅ PASS[0m
   └─ Config command help works
[32] Testing config_list: [0;32m✅ PASS[0m
   └─ Config list works
[33] Testing config_get: [0;32m✅ PASS[0m
   └─ Config get works
[34] Testing config_get_value: [0;31m❌ FAIL[0m (output does not contain: '3.12')
   └─ Config get returns expected default
   └─ Command: /Users/gonzalo/code/spinbox/bin/spinbox config --get PYTHON_VERSION
   └─ Output: 3.9
[0;31m✗ CLI Reference Validation tests failed[0m
[1;33m--- Component Generators Tests ---[0m
=============================================
Spinbox Component Generator Test Suite
=============================================

[0;34m[INFO][0m === Testing Generator File Existence ===
[0;32m✓[0m fastapi_generator_exists: Generator file exists
[0;32m✓[0m fastapi_generator_readable: Generator file is readable
[0;32m✓[0m nextjs_generator_exists: Generator file exists
[0;32m✓[0m nextjs_generator_readable: Generator file is readable
[0;32m✓[0m postgresql_generator_exists: Generator file exists
[0;32m✓[0m postgresql_generator_readable: Generator file is readable
[0;32m✓[0m mongodb_generator_exists: Generator file exists
[0;32m✓[0m mongodb_generator_readable: Generator file is readable
[0;32m✓[0m redis_generator_exists: Generator file exists
[0;32m✓[0m redis_generator_readable: Generator file is readable
[0;32m✓[0m chroma_generator_exists: Generator file exists
[0;32m✓[0m chroma_generator_readable: Generator file is readable
[0;34m[INFO][0m Testing minimal generators
[0;32m✓[0m minimal-python_generator_exists: Generator file exists
[0;32m✓[0m minimal-python_generator_readable: Generator file is readable
[0;32m✓[0m minimal-node_generator_exists: Generator file exists
[0;32m✓[0m minimal-node_generator_readable: Generator file is readable

[0;34m[INFO][0m === Testing CLI Component Flags ===
[0;34m[INFO][0m Testing component: fastapi via CLI
[0;32m✓[0m fastapi_cli_dry_run: CLI accepts --fastapi flag
[0;32m✓[0m fastapi_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: nextjs via CLI
[0;32m✓[0m nextjs_cli_dry_run: CLI accepts --nextjs flag
[0;32m✓[0m nextjs_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: postgresql via CLI
[0;32m✓[0m postgresql_cli_dry_run: CLI accepts --postgresql flag
[0;32m✓[0m postgresql_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: mongodb via CLI
[0;32m✓[0m mongodb_cli_dry_run: CLI accepts --mongodb flag
[0;32m✓[0m mongodb_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: redis via CLI
[0;32m✓[0m redis_cli_dry_run: CLI accepts --redis flag
[0;32m✓[0m redis_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: chroma via CLI
[0;32m✓[0m chroma_cli_dry_run: CLI accepts --chroma flag
[0;32m✓[0m chroma_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: python via CLI
[0;32m✓[0m python_cli_dry_run: CLI accepts --python flag
[0;32m✓[0m python_cli_component_listed: Component appears in dry-run output
[0;34m[INFO][0m Testing component: node via CLI
[0;32m✓[0m node_cli_dry_run: CLI accepts --node flag
[0;32m✓[0m node_cli_component_listed: Component appears in dry-run output

[0;34m[INFO][0m === Testing Component Combinations ===
[0;34m[INFO][0m Testing component combinations
[0;32m✓[0m combo_python_fastapi: Combination works: python fastapi
[0;32m✓[0m combo_node_nextjs: Combination works: node nextjs
[0;32m✓[0m combo_fastapi_postgresql: Combination works: fastapi postgresql
[0;32m✓[0m combo_nextjs_mongodb: Combination works: nextjs mongodb
[0;32m✓[0m combo_python_postgresql_redis: Combination works: python postgresql redis
[0;32m✓[0m combo_fastapi_nextjs_postgresql_redis: Combination works: fastapi nextjs postgresql redis

[0;34m[INFO][0m === Component Generator Analysis ===

[0;34m[INFO][0m Existing generators found:
  ✓ fastapi
  ✓ nextjs
  ✓ postgresql
  ✓ mongodb
  ✓ redis
  ✓ chroma
  ✓ minimal-python
  ✓ minimal-node

[1;33m⚠[0m Missing generators identified:

=============================================
Component Generator Test Results
=============================================

Total Tests: 38
[0;32mPassed: 38[0m
[0;31mFailed: 0[0m

[0;32m✓ ALL COMPONENT GENERATORS WORKING![0m

Component generator analysis complete!

[0;32m✓ Component Generators tests passed[0m
[1;33m--- Profile Validation Tests ---[0m
=============================================
Spinbox Profile Test Suite
=============================================

[0;34m[INFO][0m Testing profile: web-app
[0;32m✓[0m web-app_parsing: Profile parsed successfully
[0;32m✓[0m web-app_template: Template 'api-development' found
[0;32m✓[0m web-app_creation: Project creation succeeded
[0;32m✓[0m web-app_components: Expected components found: python fastapi nextjs postgresql

[0;34m[INFO][0m Testing profile: api-only
[0;32m✓[0m api-only_parsing: Profile parsed successfully
[0;32m✓[0m api-only_template: Template 'api-development' found
[0;32m✓[0m api-only_creation: Project creation succeeded
[0;32m✓[0m api-only_components: Expected components found: python fastapi postgresql redis

[0;34m[INFO][0m Testing profile: ai-llm
[0;32m✓[0m ai-llm_parsing: Profile parsed successfully
[0;32m✓[0m ai-llm_template: Template 'ai-llm' found
[0;32m✓[0m ai-llm_creation: Project creation succeeded
[0;32m✓[0m ai-llm_components: Expected components found: python chroma

[0;34m[INFO][0m Testing profile: python
[0;32m✓[0m python_parsing: Profile parsed successfully
[0;32m✓[0m python_template: Template 'minimal' found
[0;32m✓[0m python_creation: Project creation succeeded
[0;32m✓[0m python_components: Expected components found: python

[0;34m[INFO][0m Testing profile: node
[0;32m✓[0m node_parsing: Profile parsed successfully
[0;32m✓[0m node_creation: Project creation succeeded

[0;34m[INFO][0m Testing profile: data-science
[0;32m✓[0m data-science_parsing: Profile parsed successfully
[0;32m✓[0m data-science_template: Template 'data-science' found
[0;32m✓[0m data-science_creation: Project creation succeeded
[0;32m✓[0m data-science_components: Expected components found: python

=============================================
Profile Test Results
=============================================

Total Tests: 22
[0;32mPassed: 22[0m
[0;31mFailed: 0[0m

[0;32m✓ ALL PROFILE TESTS PASSED![0m

[0;32m✓[0m All profiles are working correctly

Profile test complete!

[0;32m✓ Profile Validation tests passed[0m
[1;33m--- Project Creation Tests ---[0m
=============================================
Spinbox Real Project Creation Test Suite
=============================================

[0;34m[INFO][0m === Testing Profile-Based Real Project Creation ===
[0;34m[INFO][0m Testing real project creation: python
[0;32m✓[0m python_profile_creation: Project created successfully
[0;32m✓[0m python_profile_directory: Project directory created
[0;32m✓[0m python_profile_file_.devcontainer: File/directory .devcontainer exists
[0;32m✓[0m python_profile_file_src: File/directory src exists
[0;32m✓[0m python_profile_file_tests: File/directory tests exists
[0;32m✓[0m python_profile_file_requirements.txt: File/directory requirements.txt exists
[0;32m✓[0m python_profile_devcontainer: DevContainer configuration created
[0;32m✓[0m python_profile_devcontainer_valid_json: DevContainer JSON is valid
[0;32m✓[0m python_profile_requirements: Requirements.txt created
[0;32m✓[0m python_profile_requirements_content: Requirements.txt has content
[0;34m[INFO][0m Testing real project creation: web-app
[0;32m✓[0m webapp_profile_creation: Project created successfully
[0;32m✓[0m webapp_profile_directory: Project directory created
[0;32m✓[0m webapp_profile_file_.devcontainer: File/directory .devcontainer exists
[0;32m✓[0m webapp_profile_file_src: File/directory src exists
[0;32m✓[0m webapp_profile_file_requirements.txt: File/directory requirements.txt exists
[0;32m✓[0m webapp_profile_file_package.json: File/directory package.json exists
[0;32m✓[0m webapp_profile_devcontainer: DevContainer configuration created
[0;32m✓[0m webapp_profile_devcontainer_valid_json: DevContainer JSON is valid
[0;32m✓[0m webapp_profile_requirements: Requirements.txt created
[0;32m✓[0m webapp_profile_requirements_content: Requirements.txt has content
[0;32m✓[0m webapp_profile_package_json: Package.json created
[0;32m✓[0m webapp_profile_package_json_valid: Package.json is valid JSON
[0;34m[INFO][0m Testing real project creation: api-only
[0;32m✓[0m api_profile_creation: Project created successfully
[0;32m✓[0m api_profile_directory: Project directory created
[0;32m✓[0m api_profile_file_.devcontainer: File/directory .devcontainer exists
[0;32m✓[0m api_profile_file_src: File/directory src exists
[0;32m✓[0m api_profile_file_requirements.txt: File/directory requirements.txt exists
[0;32m✓[0m api_profile_file_docker-compose.yml: File/directory docker-compose.yml exists
[0;32m✓[0m api_profile_devcontainer: DevContainer configuration created
[0;32m✓[0m api_profile_devcontainer_valid_json: DevContainer JSON is valid
[0;32m✓[0m api_profile_docker_compose: Docker Compose file created
[0;31m✗[0m api_profile_docker_compose_valid: Docker Compose YAML is invalid
[0;32m✓[0m api_profile_requirements: Requirements.txt created
[0;32m✓[0m api_profile_requirements_content: Requirements.txt has content

[0;34m[INFO][0m === Testing Component-Based Real Project Creation ===
[0;34m[INFO][0m Testing component-based creation: python
[0;32m✓[0m python_component_creation: Component-based project created
[0;32m✓[0m python_component_directory: Project directory created
[0;32m✓[0m python_component_basic_.devcontainer: Basic file .devcontainer exists
[0;32m✓[0m python_component_basic_.gitignore: Basic file .gitignore exists
[0;32m✓[0m python_component_basic_README.md: Basic file README.md exists
[0;34m[INFO][0m Testing component-based creation: node
[0;32m✓[0m node_component_creation: Component-based project created
[0;32m✓[0m node_component_directory: Project directory created
[0;32m✓[0m node_component_basic_.devcontainer: Basic file .devcontainer exists
[0;32m✓[0m node_component_basic_.gitignore: Basic file .gitignore exists
[0;32m✓[0m node_component_basic_README.md: Basic file README.md exists
[0;34m[INFO][0m Testing component-based creation: python fastapi
[0;32m✓[0m python_fastapi_creation: Component-based project created
[0;32m✓[0m python_fastapi_directory: Project directory created
[0;32m✓[0m python_fastapi_basic_.devcontainer: Basic file .devcontainer exists
[0;32m✓[0m python_fastapi_basic_.gitignore: Basic file .gitignore exists
[0;32m✓[0m python_fastapi_basic_README.md: Basic file README.md exists

[0;34m[INFO][0m === Testing Project Structure Validation ===
[0;32m✓[0m test-python_profile-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-python_profile-34619_python_src_dir: Python src directory exists
[0;32m✓[0m test-python_profile-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-python_profile-34619_essential_README.md: Essential file README.md exists
[0;32m✓[0m test-webapp_profile-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-webapp_profile-34619_python_src_dir: Python src directory exists
[0;32m✓[0m test-webapp_profile-34619_node_structure: Node project structure detected
[0;32m✓[0m test-webapp_profile-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-webapp_profile-34619_essential_README.md: Essential file README.md exists
[0;32m✓[0m test-api_profile-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-api_profile-34619_python_src_dir: Python src directory exists
[0;32m✓[0m test-api_profile-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-api_profile-34619_essential_README.md: Essential file README.md exists
[0;32m✓[0m test-python_component-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-python_component-34619_python_src_dir: Python src directory exists
[0;32m✓[0m test-python_component-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-python_component-34619_essential_README.md: Essential file README.md exists
[0;32m✓[0m test-node_component-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-node_component-34619_node_structure: Node project structure detected
[0;32m✓[0m test-node_component-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-node_component-34619_essential_README.md: Essential file README.md exists
[0;32m✓[0m test-python_fastapi-34619_devcontainer_dir: DevContainer directory exists
[0;32m✓[0m test-python_fastapi-34619_python_src_dir: Python src directory exists
[0;32m✓[0m test-python_fastapi-34619_essential_.gitignore: Essential file .gitignore exists
[0;32m✓[0m test-python_fastapi-34619_essential_README.md: Essential file README.md exists

=============================================
Real Project Creation Test Results
=============================================

Total Tests: 74
[0;32mPassed: 73[0m
[0;31mFailed: 1[0m

Projects created for testing: 6
[0;31m✗ SOME REAL PROJECT CREATION TESTS FAILED[0m

[0;31m✗[0m Issues found with actual file/directory generation

Real project creation analysis complete!

[0;34m[INFO][0m Cleaning up created projects...
[0;31m✗ Project Creation tests failed[0m
[1;33m--- Update System Tests ---[0m
=============================================
Spinbox Update System Test Suite
=============================================

[0;34m[INFO][0m === Testing Update Check Functionality ===
[0;32m✓[0m update_check_basic: Update check command works
[0;32m✓[0m update_check_version_info: Update check shows version information
[0;32m✓[0m update_check_verbose: Update check with verbose flag works

[0;34m[INFO][0m === Testing Update Dry Run Functionality ===
[0;31m✗[0m update_dry_run: Update dry-run command failed

[0;34m[INFO][0m === Testing Version-Specific Update ===
[0;31m✗[0m update_specific_version: Update to specific version failed

[0;34m[INFO][0m === Testing Update Force Functionality ===
[0;31m✗[0m update_force_flag: Update force flag not working

[0;34m[INFO][0m === Testing Update Yes Flag ===
[0;31m✗[0m update_yes_flag: Update yes flag not working

[0;34m[INFO][0m === Testing Backup Functionality ===
[0;32m✓[0m update_library_exists: Update library file exists
[0;32m✓[0m backup_functions_exist: Backup functions found in update library
[0;32m✓[0m rollback_functions_exist: Rollback functions found in update library
[0;32m✓[0m installation_detection_exists: Installation method detection exists

[0;34m[INFO][0m === Testing Installation Method Detection ===
[0;32m✓[0m dev_mode_update_check: Update works in development mode

[0;34m[INFO][0m === Testing Version Comparison ===
[0;32m✓[0m version_command_works: Version command works
[0;32m✓[0m version_format_valid: Version format is valid
[0;32m✓[0m update_shows_current_version: Update check shows current version

[0;34m[INFO][0m === Testing GitHub Integration ===
[0;31m✗[0m github_integration_mentioned: GitHub integration not mentioned

[0;34m[INFO][0m === Testing Update Error Handling ===
[0;31m✗[0m invalid_version_error_message: Invalid version error message not helpful
[0;32m✓[0m conflicting_flags_handled: Conflicting update flags handled

[0;34m[INFO][0m === Update System Analysis ===

[1;33m⚠[0m Missing or non-functional update features:
  ✗ update_dry_run
  ✗ update_specific_version
  ✗ update_force_flag
  ✗ update_yes_flag

=============================================
Update System Test Results
=============================================

Total Tests: 18
[0;32mPassed: 12[0m
[0;31mFailed: 6[0m

[1;33m⚠ UPDATE SYSTEM FEATURES MISSING OR NOT FUNCTIONAL[0m

The following update features may need implementation:
  - update_dry_run
  - update_specific_version
  - update_force_flag
  - update_yes_flag

[1;33m✓ BASIC UPDATE SYSTEM WORKS, BUT SOME FEATURES NEED ATTENTION[0m

Update system analysis complete!

[0;31m✗ Update System tests failed[0m
[0;31m✗ Workflow tests failed (3/6 passed)[0m
[0;34m===============================================[0m
[0;34m          Running End-to-End Tests           [0m
[0;34m===============================================[0m
[1;33m--- Installation Scenario Tests ---[0m
[0;34m[INFO][0m Test environment setup for: End-to-End Installation Scenarios Tests
[0;34m[INFO][0m Project root: /Users/gonzalo/code/spinbox
[0;34m[INFO][0m Test directory: /tmp/spinbox-test-37968
=============================================
Spinbox Comprehensive Test Suite
=============================================
Log file: /tmp/spinbox-test-20250719-175149.log

=== Phase 1: Development Mode Tests ===
[0;32m✓[0m dev_binary_exists: Development binary found
[0;34m[INFO][0m Running: dev_version
[0;32m✓[0m dev_version: Command succeeded as expected
[0;32m✓[0m dev_ai_profile: Enhanced AI/LLM profile found
[0;32m✓[0m dev_data_science_profile: Enhanced data-science profile found
[0;32m✓[0m dev_minimal_removed: Minimal profile correctly removed
[0;32m✓[0m dev_profile_count: Correct profile count: 6
[0;32m✓[0m dev_new_profiles: Python and node profiles found
[0;34m[INFO][0m Running: dev_create_python
[0;32m✓[0m dev_create_python: Command succeeded as expected
[0;34m[INFO][0m Running: dev_create_node
[0;32m✓[0m dev_create_node: Command succeeded as expected
[0;34m[INFO][0m Running: dev_create_profile_python
[0;32m✓[0m dev_create_profile_python: Command succeeded as expected
[0;34m[INFO][0m Running: dev_help_main
[0;32m✓[0m dev_help_main: Command succeeded as expected
[0;34m[INFO][0m Running: dev_help_create
[0;32m✓[0m dev_help_create: Command succeeded as expected
[0;34m[INFO][0m Running: dev_help_profiles
[0;32m✓[0m dev_help_profiles: Command succeeded as expected

=== Phase 2: Local Installation Tests ===
[0;34m[INFO][0m Cleaning up existing installations...
[0;34m[INFO][0m Running: local_install
[0;32m✓[0m local_install: Command succeeded as expected
[0;32m✓[0m local_binary_installed: Local binary installed
[0;32m✓[0m local_source_created: Centralized source created
[0;32m✓[0m local_source_lib: lib directory exists in source
[0;32m✓[0m local_source_generators: generators directory exists in source
[0;32m✓[0m local_source_templates: templates directory exists in source
[0;34m[INFO][0m Running: local_version
[0;32m✓[0m local_version: Command succeeded as expected
[0;32m✓[0m local_ai_profile: Enhanced AI/LLM profile found
[0;32m✓[0m local_data_science_profile: Enhanced data-science profile found
[0;32m✓[0m local_minimal_removed: Minimal profile correctly removed
[0;32m✓[0m local_profile_count: Correct profile count: 6
[0;32m✓[0m local_new_profiles: Python and node profiles found
[0;34m[INFO][0m Running: local_base_python
[0;32m✓[0m local_base_python: Command succeeded as expected
[0;34m[INFO][0m Running: local_base_node
[0;32m✓[0m local_base_node: Command succeeded as expected
[0;34m[INFO][0m Running: local_profile_python
[0;32m✓[0m local_profile_python: Command succeeded as expected
[0;34m[INFO][0m Running: local_profile_node
[0;32m✓[0m local_profile_node: Command succeeded as expected
[0;34m[INFO][0m Running: local_profile_web
[0;32m✓[0m local_profile_web: Command succeeded as expected
[0;34m[INFO][0m Running: local_update_check
[0;32m✓[0m local_update_check: Command succeeded as expected
[0;34m[INFO][0m Running: local_uninstall
[0;32m✓[0m local_uninstall: Command succeeded as expected

=== Phase 3: Global Installation Tests ===
[0;34m[INFO][0m Cleaning up existing installations...
[0;34m[INFO][0m Running: global_install
[0;32m✓[0m global_install: Command succeeded as expected
[0;32m✓[0m global_binary_installed: Global binary installed
[0;32m✓[0m global_source_created: Centralized source created
[0;34m[INFO][0m Running: global_version
[0;32m✓[0m global_version: Command succeeded as expected
[0;32m✓[0m global_ai_profile: Enhanced AI/LLM profile found
[0;32m✓[0m global_data_science_profile: Enhanced data-science profile found
[0;32m✓[0m global_minimal_removed: Minimal profile correctly removed
[0;32m✓[0m global_profile_count: Correct profile count: 6
[0;32m✓[0m global_new_profiles: Python and node profiles found
[0;34m[INFO][0m Running: global_create_project
[0;32m✓[0m global_create_project: Command succeeded as expected
[0;34m[INFO][0m Running: global_config_list
[0;32m✓[0m global_config_list: Command succeeded as expected
[0;34m[INFO][0m Running: global_config_get
[0;32m✓[0m global_config_get: Command succeeded as expected
[0;34m[INFO][0m Running: global_uninstall
[0;32m✓[0m global_uninstall: Command succeeded as expected

=== Phase 4: Remote Installation Tests ===
[1;33m⚠[0m Remote tests require network access and will install from GitHub
[0;34m[INFO][0m Cleaning up existing installations...
[0;34m[INFO][0m Running: remote_user_install
[0;32m✓[0m remote_user_install: Command succeeded as expected
[0;32m✓[0m remote_user_command: Remote user installation successful
[0;31m✗[0m remote_user_profiles: Remote installation profiles issue
[0;34m[INFO][0m Running: remote_user_cleanup
[0;32m✓[0m remote_user_cleanup: Command succeeded as expected
[0;34m[INFO][0m Running: remote_system_install
[0;32m✓[0m remote_system_install: Command succeeded as expected
[0;32m✓[0m remote_system_command: Remote system installation successful
[0;34m[INFO][0m Running: remote_system_cleanup
[0;32m✓[0m remote_system_cleanup: Command succeeded as expected

=== Phase 5: Edge Cases and Error Handling ===
[0;34m[INFO][0m Cleaning up existing installations...
[0;34m[INFO][0m Running: edge_invalid_command
[0;32m✓[0m edge_invalid_command: Command failed as expected
[0;34m[INFO][0m Running: edge_invalid_profile
[0;32m✓[0m edge_invalid_profile: Command failed as expected
[0;34m[INFO][0m Running: edge_missing_project
[0;32m✓[0m edge_missing_project: Command failed as expected
[0;34m[INFO][0m Running: edge_conflicting_profiles
[0;31m✗[0m edge_conflicting_profiles: Command succeeded but failure was expected
[0;34m[INFO][0m Running: edge_readonly_dir
[0;32m✓[0m edge_readonly_dir: Command failed as expected
[0;34m[INFO][0m Running: edge_double_install
[0;32m✓[0m edge_double_install: Command succeeded as expected
[0;34m[INFO][0m Cleaning up existing installations...
[0;34m[INFO][0m Running: edge_uninstall_nothing
[0;32m✓[0m edge_uninstall_nothing: Command succeeded as expected

=== Phase 6: Architecture Consistency Tests ===
[0;34m[INFO][0m Cleaning up existing installations...
[0;32m✓[0m consistency_dev_local: Development and local outputs identical
[0;34m[INFO][0m Cleaning up existing installations...
[0;32m✓[0m consistency_dev_global: Development and global outputs identical
[0;34m[INFO][0m Cleaning up existing installations...

=============================================
Test Suite Results
=============================================

Total Tests: 61
[0;32mPassed: 59[0m
[0;31mFailed: 2[0m
[1;33mSkipped: 0[0m

[0;31m✗ SOME TESTS FAILED[0m

Failed tests:
  - remote_user_profiles
  - edge_conflicting_profiles

Full test log available at: /tmp/spinbox-test-20250719-175149.log

[0;34m[INFO][0m Cleaning up all test artifacts...
[0;31m✗ End-to-end tests failed[0m

[1;33m=================================================[0m
[1;33m             Final Test Results                 [0m
[1;33m=================================================[0m
Test suites run: 4
[0;32mPassed: 2[0m
[0;31mFailed: 2[0m
Execution time: 112s

[0;31m❌ Some test suites failed[0m
[0;31m💡 Check the output above for specific failures[0m
[0;34m[Cleanup] Cleaning up test artifacts...[0m
[0;34m[Cleanup] Removing test directories from project root...[0m
[0;34m[Cleanup] Removing test directories from home...[0m
[0;34m[Cleanup] Removing test directories from tmp...[0m
[0;34m[Cleanup] Cleaning up installations...[0m
[0;32m[Cleanup] Test cleanup completed[0m
